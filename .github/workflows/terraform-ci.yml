name: Validaci√≥n CI de M√≥dulos Terraform

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Instalar TFLint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash

      - name: Detectar m√≥dulos modificados
        id: modulos
        run: |
          BASE_SHA=""
          HEAD_SHA=""

          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
            HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          else
            git fetch --depth=2 origin ${{ github.ref_name }} || true
            BASE_SHA=$(git rev-parse HEAD^ 2>/dev/null || echo "")
            HEAD_SHA=$(git rev-parse HEAD)
          fi

          echo "BASE_SHA=$BASE_SHA"
          echo "HEAD_SHA=$HEAD_SHA"

          if [ -z "$BASE_SHA" ]; then
            echo "‚ö†Ô∏è No se pudo determinar el commit base. Ejecutando validaci√≥n completa."
            MODULOS=$(find . -maxdepth 1 -type d ! -name "." ! -name ".github" -exec basename {} \;)
          else
            set +e
            DIFF_OUTPUT=$(git diff --name-only $BASE_SHA $HEAD_SHA 2>&1)
            if [ $? -ne 0 ]; then
              echo "‚ùå Error en git diff:"
              echo "$DIFF_OUTPUT"
              exit 1
            fi
            MODULOS=$(echo "$DIFF_OUTPUT" | cut -d/ -f1 | sort -u | grep -v '^\.github$')
          fi

          echo "M√≥dulos detectados: $MODULOS"
          echo "modulos=$MODULOS" >> $GITHUB_OUTPUT

      - name: Validar cada m√≥dulo cambiado
        if: steps.modulos.outputs.modulos != ''
        run: |
          for dir in ${{ steps.modulos.outputs.modulos }}; do
            echo "\nüîç Validando m√≥dulo: $dir"
            cd $dir
            terraform init -backend=false
            terraform validate
            terraform fmt -check -recursive
            tflint --init
            tflint
            cd -
          done
